

class Solution {
    
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        
        int n = image.length;
        int m = image[0].length;
        int x = image[sr][sc];
        int ans[][] = new int[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                ans[i][j] = image[i][j];
            }
        }
        int delrow[] = {-1,0,+1,0};
        int delcol[] = {0,+1,0,-1};
        dfs(image,sr,sc,x,color,ans,n,m,delrow,delcol);
        return ans;
    }

    public void dfs(int image[][],int row,int col,int x,int color,int ans[][],int n, int m, int delrow[],int delcol[]){
        ans[row][col] = color;
        for(int i=0;i<4;i++){
            int nrow = row+delrow[i];
            int ncol = col+delcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]==x && ans[nrow][ncol]!=color){
                dfs(image,nrow,ncol,x,color,ans,n,m,delrow,delcol);
            }
        }
    }

}

