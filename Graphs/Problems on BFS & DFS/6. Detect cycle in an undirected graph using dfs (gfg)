
class Solution {
    
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        
        int visited[] = new int[V];
        for(int i=0;i<V;i++){
            if(visited[i]==0){
                if(dfs(adj,i,-1,visited)==true){
                    return true;
                }
            }
        }
        return false;
    }
    
    public boolean dfs(ArrayList<ArrayList<Integer>> adj,int node,int parent,int visited[]){
        visited[node] = 1;
        for(int adjNode:adj.get(node)){
            if(visited[adjNode]==0){
                if(dfs(adj,adjNode,node,visited)==true){
                    return true;
                }
            }
            else if(adjNode!=parent){
                return true;
            }
        }
        return false;
    }
    
}
